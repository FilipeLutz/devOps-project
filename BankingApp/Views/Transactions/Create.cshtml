<!--jon gouspy 74538-->
@model BankingApp.Models.Transaction

@{
    Layout = null;
    if (Session["Id"] == null)
    {
        Response.Redirect("~/Login/Index");
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    {
        <!DOCTYPE html>

        <html>
        <head>
            <meta name="viewport" content="width=device-width" />
            <title>Create</title>
            <link href="@Url.Content("~/Content/global.css")" rel="stylesheet" type="text/css" />

            <style>
                .input-button {
                    width: 100%;
                    font-size: 16px;
                    display: block;
                    margin-bottom: 10px;
                    padding: 10px 20px;
                    background-color: #4CAF50;
                    color: white;
                    border: none;
                    cursor: pointer;
                    border-radius: 5px;
                    text-align: center;
                    text-decoration: none;
                    transition: background-color 0.3s;
                    text-decoration: none;
                }

                    .input-button:focus,
                    .input-button:hover {
                        background-color: #45A049;
                    }

                .account-details {
                    margin-bottom: 20px;
                }

                .dl-horizontal dt {
                    font-weight: bold;
                    margin-bottom: 5px;
                }

                .dl-horizontal dd {
                    margin-left: 0;
                    margin-bottom: 30px;
                }

                #logout-btn {
                    position: fixed;
                    bottom: 20px;
                    left: 30px;
                    padding: 10px 20px;
                    border: none;
                    border-radius: 5px;
                    cursor: pointer;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="buttons-section">
                    <input type="submit" value="Create" class="btn btn-default input-button" />
                    @Html.ActionLink("Transaction List", "Index")
                    @if ((int)Session["Id"] == 1)
                    {

                        @Html.ActionLink("Back to Users", "Index", "Admin")
                    }
                    else
                    {
                        @Html.ActionLink("Back to Home Page", "Index", "Home")
                    }
                    @Html.ActionLink("Log Out", "LogOut", "Login", null, new { @id = "logout-btn" })
                </div>
                <div class="text-section">
                    <h3>New Transaction</h3>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="account-details">
                        <dl class="dl-horizontal">
                            <dt>@Html.LabelFor(model => model.SourceAccountId, htmlAttributes: new { @class = "control-label col-md-2" })</dt>
                            <dd>
                                @ViewBag.SourceAccount
                            </dd>

                            <dt>@Html.LabelFor(model => model.DestinationAccountId, htmlAttributes: new { @class = "control-label col-md-2" })</dt>
                            <dd>
                                @Html.DropDownListFor(model => model.DestinationAccountId, (SelectList)ViewBag.DestinationAccountList, "-- Select User --", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DestinationAccountId, "", new { @class = "text-danger" })
                            </dd>

                            <dt>@Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })</dt>
                            <dd>
                                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                            </dd>

                            <dt>@Html.LabelFor(model => model.TransactionType, htmlAttributes: new { @class = "control-label col-md-2" })</dt>
                            <dd>
                                @Html.DropDownListFor(model => model.TransactionType, Enum.GetValues(typeof(BankingApp.Models.Transaction.ETransactionType)).Cast<BankingApp.Models.Transaction.ETransactionType>().Select(x => new SelectListItem { Text = x.ToString(), Value = ((byte)x).ToString() }))
                                @Html.ValidationMessageFor(model => model.TransactionType, "", new { @class = "text-danger" })
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
            <script src="~/Scripts/logout-btn.js"></script>
        </body>
    </html>
}
}
